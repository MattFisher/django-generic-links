{"body":"django-generic-links: attach and handle links to any django model\r\n================================================================================\r\n\r\n\r\nInstallation\r\n--------------------------------------------------------------------------------\r\nInstalling `django-generic-links` is fairly easy. You can...\r\n\r\n    (pip install | easy_install) django-generic-links\r\n\r\n...or, you can clone the repo and install it the old fashioned way.\r\n\r\n    git clone git://github.com/matagus/django-generic-links.git\r\n    cd django-generic-links\r\n    sudo python setup.py install\r\n\r\nthen add `generic_links` to your `settings.py`:\r\n\r\n``` python\r\n    INSTALLED_APPS = (\r\n        # ...\r\n        'generic_links',\r\n    )\r\n```\r\n\r\nand syncronize your database!\r\n\r\n    # python manage.py syncdb\r\n\r\n\r\nUsing django-generic-links models\r\n--------------------------------------------------------------------------------\r\nGuess you have a music app in your project where you store Artist data. And you\r\nwould like to store and display links for each artist, say his facebook page,\r\nhis last.fm profile, his youtube artist page and the like:\r\n\r\n``` python\r\n>>> from generic_links.models import GenericLink\r\n>>> from music.models import Artist\r\n>>> lou_reed = Artist.objects.get(pk=1)\r\n>>> lou_reed\r\n<Artist: Lou Reed>\r\n\r\n>>> link1 = GenericLink()\r\n>>> link1.title = \"Wikipedia Page\"\r\n>>> link1.url = \"http://en.wikipedia.org/wiki/Lou_Reed\"\r\n>>> link1.is_external = True\r\n>>> link1.content_object = lour_reed\r\n>>> link1.save()\r\n\r\n>>> link2 = GenericLink()\r\n>>> link2.title = \"Youtube artist page\"\r\n>>> link2.url = \"http://www.youtube.com/artist/lou_reed\"\r\n>>> link2.is_external = True\r\n>>> link2.content_object = lour_reed\r\n>>> link2.save()\r\n\r\n>>> from generic_links.utils import get_links_for\r\n>>> qs = get_links_for(lou_reed, is_external=True)\r\n[<GenericLink: http://en.wikipedia.org/wiki/Lou_Reed>,\r\n<GenericLink: http://www.youtube.com/artist/lou_reed>]\r\n\r\n```\r\n\r\nUsing django-generic-links templatetags\r\n--------------------------------------------------------------------------------\r\n\r\nNow guess you have an artist page. You're passing `artist` object using template\r\ncontext and you want to get all the links for it:\r\n\r\n```html\r\n{% load generic_links_tags %}\r\n\r\n<h1>{{ artist.name }}</h1>\r\n<p>{{ artist.description }}</p>\r\n\r\n<h2>Links for {{ artist.name }}</h2>\r\n{% get_links_for artist as artist_links %}\r\n<ul>\r\n{% for link in artist_links %}\r\n    <li><a href=\"{{ link.url }}\" title=\"{{ link.title }}\">{{ link.title }}</a></li>\r\n{% endfor %}\r\n</ul>\r\n\r\n```\r\n\r\nQuestions, Comments, etc?\r\n--------------------------------------------------------------------------------\r\nYou may use Github comments to comment this code or the project issues to open\r\nissues if you find a bug or a missing feature you'd like to have.\r\n\r\nYou can also follow me on Twitter - **[@matagus](http://twitter.com/matagus)**.\r\n\r\nWant to help?\r\n--------------------------------------------------------------------------------\r\nIf you'd like to help, write example code, contribute patches, document things\r\non the wiki your help is always appreciated! Just fork the project, clone your\r\nrepo, commit, push and send me a pull request\r\n\r\nLicense\r\n--------------------------------------------------------------------------------\r\n\r\n`django-generic-links` is released under an BSD License - see the `LICENSE` file\r\nfor more information.\r\n","google":"UA-30977358-3","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"django-generic-links","tagline":"Simple and generic application for Django projects to attach and handle links for any object"}